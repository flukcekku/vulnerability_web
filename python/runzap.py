from zapv2 import ZAPv2
import time
import sys

print("python ready to run")

def fix_url(url):
    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'https://' + url
    return url

def run_zap_scan(url):
    # กำหนดค่าพารามิเตอร์สำหรับเชื่อมต่อกับ OWASP ZAP API
    zap = ZAPv2(apikey='n6a665p7i15p0f0vgbj18l5j4q', proxies={'http': 'http://localhost:8090', 'https': 'http://localhost:8090'})

    try:
        # เปิดหน้าเว็บที่ต้องการทดสอบ
        print('Accessing target website...')
        # target_url = 'http://www.google.com'  # แทนที่ด้วย URL ของเว็บไซต์ที่ต้องการทดสอบ
        target_url = url
        zap.urlopen(target_url)

        # Spider the website
        print('Spidering the website...')
        zap.spider.scan(target_url)
        while int(zap.spider.status()) < 100:
            # Wait for the spidering to complete
            time.sleep(5)

        print('Starting the active scan...')
        zap.ascan.scan(target_url)
        while int(zap.ascan.status()) < 100:
            # Wait for the active scan to complete
            time.sleep(5)

        # แสดงรายงานการสแกน
        print('Generating the scan report...')
        report_html = zap.core.htmlreport()

        # บันทึกรายงานในไฟล์
        report_file_name = 'zap_report.html'  # ชื่อไฟล์ที่ต้องการบันทึกรายงาน
        with open(report_file_name, 'w', encoding='utf-8') as report_file:
            report_file.write(report_html)
        print(f'Scan report saved to: {report_file_name}')
    except Exception as e:
        print('An error occurred:', str(e))

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python runzap.py <target_url>")
    else:
        target_url = fix_url(sys.argv[1])
        print("Running ZAP scan for:", target_url)
        run_zap_scan(target_url)

# run_zap_scan()