document.addEventListener("DOMContentLoaded", function () {

    // C:\Users\ratha\Downloads\vulnerability_web\public\python\zap_report.json
    fetch("./public/python/zap_report.json") // Replace with the URL of your JSON file
        .then(response => response.json())
        .then(data => {
            const alertTable = document.getElementById("alertTable").getElementsByTagName('tbody')[0];
            let number = 0;
            data.alerts.forEach(alert => {
                let count_rick = 0
                
                const row = alertTable.insertRow();
                const pluginIdCell = row.insertCell(0);
                const alertCell = row.insertCell(1);
                const riskCodeCell = row.insertCell(2);
                // const confidenceCell = row.insertCell(3);
                const riskDescCell = row.insertCell(3);
                const buttonCell = row.insertCell(4); // Add a cell for the button

                // pluginIdCell.innerHTML = alert.pluginid;
                pluginIdCell.innerHTML = number + 1;
                pluginIdCell.style.textAlign = "center"
                number += 1;
                alertCell.innerHTML = alert.alert;
                // confidenceCell.innerHTML = alert.confidence;
                riskCodeCell.innerHTML = alert.riskcode;
                
                
                const riskDescription = alert.riskdesc.replace(/\s?\(Low\)|\s?\(High\)|\s?\(Medium\)|\s?\(Informational\)/g, '');
                riskDescCell.innerHTML = riskDescription;

                
                if (riskDescription.includes("High")) {
                    riskDescCell.style.backgroundColor = "red";
                    riskDescCell.style.color = "white";
                    riskDescCell.style.textAlign = "center";
                } else if (riskDescription.includes("Medium")) {
                    riskDescCell.style.backgroundColor = "orange";
                    riskDescCell.style.color = "white";
                    riskDescCell.style.textAlign = "center";
                } else if (riskDescription.includes("Low")) {
                    riskDescCell.style.backgroundColor = "yellow";
                    riskDescCell.style.color = "black";
                    riskDescCell.style.textAlign = "center";
                } else if (riskDescription.includes("Informational")) {
                    riskDescCell.style.backgroundColor = "blue";
                    riskDescCell.style.color = "white";
                    riskDescCell.style.textAlign = "center";
                }

                // Create a button element and set its attributes
                const button = document.createElement("button");
                button.id = 'detail';
                button.innerHTML = '<i class="bi bi-box-arrow-up-right"></i>'; // เปลี่ยนเนื้อหาของปุ่ม
                button.classList.add("btn", "btn-primary");
                button.setAttribute("data-bs-toggle", "modal");
                button.setAttribute("data-bs-target", `#modal-${alert.pluginid}`);
                button.style.backgroundColor = "transparent";
                button.style.border = "none"
                button.style.color = "black"
                button.setAttribute("data-text", "See more detail");
                new bootstrap.Tooltip(button, {
                    title: button.getAttribute("data-text"), // ใช้ค่า data-text เป็น title
                    placement: "top", // ตำแหน่งของ Tooltip (บนไอคอน)
                });

                // Append the button to the button cell
                buttonCell.appendChild(button);

                // Create a modal for each alert with unique ID
                const modal = document.createElement("div");
                modal.classList.add("modal", "fade");
                modal.id = `modal-${alert.pluginid}`;
                modal.setAttribute("tabindex", "-1");
                modal.setAttribute("aria-labelledby", `modalLabel-${alert.pluginid}`);
                modal.setAttribute("aria-hidden", "true");

                // Create modal dialog
                const modalDialog = document.createElement("div");
                modalDialog.classList.add("modal-dialog");

                // Create modal content
                const modalContent = document.createElement("div");
                modalContent.classList.add("modal-content");

                // Create modal header
                const modalHeader = document.createElement("div");
                modalHeader.classList.add("modal-header");
                modalHeader.innerHTML = `<h1 class="modal-title fs-5" id="modalLabel-${alert.pluginid}">${alert.alert}</h1>
                                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>`;

                // Create modal body
                const modalBody = document.createElement("div");
                modalBody.classList.add("modal-body");

                // Populate modal body with instances data
                alert.instances.forEach(instance => {
                    if (instance.uri == ""){
                        instance.uri = " - "
                    }
                    if (instance.method == ""){
                        instance.method = " - "
                    }
                    if (instance.param == ""){
                        instance.param = " - "
                    }
                    if (instance.attack == ""){
                        instance.attack = " - "
                    }
                    if (instance.evidence == ""){
                        instance.evidence = " - "
                    }
                    if (instance.solution == ""){
                        instance.solution = " - "
                    }
                    count_rick += 1
                    modalBody.innerHTML += `<p><b>URI:</b> ${instance.uri}</p>
                                           <p><b>Method:</b> ${instance.method}</p>
                                           <p><b>Parameter:</b> ${instance.param}</p>
                                           <p><b>Attack:</b> ${instance.attack}</p>
                                           <p><b>Evidence:</b> ${instance.evidence}</p>
                                           <p><b>Solution:</b> ${alert.solution.replace(/<p>|<\/p>/g, '')}</p>
                                           <hr>`;
                });
                riskCodeCell.innerHTML = count_rick;
                riskCodeCell.style.textAlign = "center"
                const headElement = document.querySelector('.show_site');
                headElement.innerHTML = `<b>Site : </b>${data.site}`;

                // Create modal footer
                const modalFooter = document.createElement("div");
                modalFooter.classList.add("modal-footer");
                modalFooter.innerHTML = `<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                          </button>`;

                // Assemble modal components
                modalContent.appendChild(modalHeader);
                modalContent.appendChild(modalBody);
                modalContent.appendChild(modalFooter);
                modalDialog.appendChild(modalContent);
                modal.appendChild(modalDialog);

                // Append modal to the body
                document.body.appendChild(modal);
            });
        })
        .catch(error => {
            console.error("Error fetching JSON: " + error.message);
        });
});
